{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/todo.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","service","todos","form","description","required","minLength","listarTodos","listar","subscribe","todoList","todo","value","salvar","savedTodo","push","reset","deletar","next","response","marcarComoConcluido","todoAtualizado","done","doneDate","submit","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","TodoService","http","API_URL","post","get","url","patch","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { TodoService } from './todo.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Todo } from './todo';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  todos: Todo[] = []\n\n  form: FormGroup = new FormGroup({\n    description : new FormControl('', [Validators.required, Validators.minLength(4)])\n  })\n\n  constructor(\n    private service: TodoService\n  ) {}\n\n  ngOnInit() {\n    this.listarTodos()\n  }\n\n  listarTodos() {\n    this.service.listar()\n      .subscribe(todoList => this.todos = todoList)\n  }\n\n  submit() {\n    const todo: Todo = { ...this.form.value }\n    this.service.salvar(todo)\n    .subscribe(savedTodo => {\n      this.todos.push(savedTodo)\n      this.form.reset()\n    })\n  }\n\n  delete(todo: Todo) {\n    this.service.deletar(todo.id)\n      .subscribe({\n        next: (response) => this.listarTodos()\n      })\n  }\n\n  done(todo: Todo) {\n    this.service.marcarComoConcluido(todo.id)\n    .subscribe({\n      next: (todoAtualizado) => {\n        todo.done = todoAtualizado.done\n        todo.doneDate = todoAtualizado.doneDate\n      }\n    })\n  }\n  \n}\n","<nav class=\"navbar navbar-dark bg-dark\">\n  <a class=\"navbar-brand\">Todo App</a>\n</nav>\n\n<div class=\"container mt-4\">\n  <h3>Todos</h3>\n  <hr/>\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n      <div class=\"row\">\n        <div class=\"col-md-6\"> \n          <input type=\"text\" class=\"form-control\" formControlName=\"description\"/>\n        </div>\n        <div class=\"col-md-2\">\n          <button type=\"submit\" [disabled]=\"!form.get('description').valid\" class=\"btn btn-primary\">Add</button>\n        </div>\n    </div>\n    <hr/>\n  </form>\n  <div class=\"row\">\n    <div class=\"col-md-7\">\n      <ul class=\"list-group\">\n        <li *ngFor=\"let todo of todos\" \n          class=\"list-group-item d-flex justify-content-between align-items-center\">\n          <span class=\"{{ todo.done ? 'done' : ''}}\">\n            {{ todo.description }}\n            {{ todo.doneDate }}\n          </span>   \n         <div class=\"btn-group\">\n            <button class=\"btn btn-success\" [disabled]=\"todo.done\" (click)=\"done(todo)\">Done</button>\n            <button class=\"btn btn-danger\" (click)=\"delete(todo)\">Delete</button>\n         </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Todo } from './todo';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  API_URL: string = environment.API_URL;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  salvar(todo: Todo) : Observable<Todo>{\n      return this.http.post<Todo>(this.API_URL, todo);\n  }\n\n  listar() : Observable<Todo[]> {\n    return this.http.get<Todo[]>(this.API_URL);\n  }\n\n  deletar(id: number) : Observable<void> {\n    const url = `${this.API_URL}/${id}`\n    return this.http.delete<void>(url)\n  }\n\n  marcarComoConcluido(id: number): Observable<Todo> {\n    const url = `${this.API_URL}/${id}/done`\n    return this.http.patch<Todo>(url, {})\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'http://localhost:8080/api/todos'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}